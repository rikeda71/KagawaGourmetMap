swagger: "2.0"
info:
  description: "API"
  version: "1.0.0"
  title: "KagawaGourmetMap"
paths:
  /shop:
    get:
      tags:
      - "shop"
      summary: "extract shops info"
      description: "return all shop"
      produces:
      - "application/json"
      parameters:
      - name: "status"
        in: "query"
        description: "shop object that needs to be added to the store"
        required: false
        type: "string"
      responses:
        200:
          description: "successful extract all shop"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Shop"
  
  /shop/{shopId}:
    get:
      tags:
      - "shop"
      summary: "extract a shop by shopid"
      description: "return shop limited by shopid"
      produces:
      - "application/json"
      parameters:
      - name: shopId
        in: path
        description: "shop object that needs to be added to the store"
        required: true
        type: "string"
      responses:
        200:
          description: "successful extract all shop"
          schema:
            $ref: "#/definitions/Shop"
    patch:
      tags:
      - "shop"
      summary: "extract a shop by shopid"
      description: "return shop"
      produces:
      - "application/json"
      parameters:
      - name: shopId
        in: path
        description: "shop object that needs to be added to the store"
        required: true
        type: "string"
      - name: "shop"
        in: "body"
        description: ""
        required: false
        schema:
          $ref: "#/definitions/Shop"
      responses:
        200:
          description: "successful extract all shop"

  /shop/{shopId}/review:
    post:
      tags:
      - "shop"
      summary: "Add a new shop info"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: shopId
        in: path
        description: "shop object that needs to be added to the store"
        required: true
        type: "string"
      - name: "review"
        in: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Reviews"
      responses:
        200:
          description: "successful input"
        405:
          description: "Invalid input"
            

definitions:
  Shop:
    type: "object"
    properties:
      id:
        type: "integer"
        example: "1"
      name:
        type: "string"
        example: "ルーヴ"
      times:
        type: "array"
        items:
          $ref: "#/definitions/Date"
      point:
        type: "number"
        example: "1.0"
      geocode:
        $ref: "#/definitions/LatLng"
  Date:
    type: "object"
    properties:
      day:
        type: "string"
        example: "月曜日"
      startTime:
        type: "string"
        format: date-time
        example: "2017-07-21T13:20:28Z"
      lastTime:
        type: "string"
        format: date-time
        example: "2017-07-21T17:30:28Z"
  Reviews:
    type: "object"
    properties:
      impress:
        type: "string"
        example: "so dericious"
      eval:
        type: "integer"
        example: "5"
  LatLng:
    properties:
      lat:
        format: float
        type: number
      lng:
        format: float
        type: number